# Задача 22:
# Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества.
# Затем пользователь вводит сами элементы множеств.

# n = int(input("Введите число n: "))
# m = int(input("Введите число m: "))
# set_1 = list()
# for _ in range(n):
#     set_1.append(int(input("Введите элемент множества: ")))
# set_2 = list()
# print(set_1)
# for _ in range(m):
#     set_2.append(int(input("Введите элемент множества: ")))
# print(set_2)
# a = set(set_1)
# b = set(set_2)
# u = sorted(a.union(b))
# print(u)

# Задача 24:
# В фермерском хозяйстве в Карелии выращивают чернику.
# Она растёт на круглой грядке, причём кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло a[i] ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,
# находясь перед некоторым кустом заданной во входном списке урожайности грядки.

# n = int(input("Введите количество кустов на грядке: "))
# bush = list()
# summ = 0
# for _ in range(n):
#     bush.append(int(input("Введите количество ягод на кусте: ")))
# print(bush)
# a = int(input("Введите номер куста: "))
# if a == 1:
#     summ = bush[-1] + bush[1] + bush[0]
# elif a == len(bush):
#     summ = bush[-2] + bush[-1] + bush[0]
# else:
#     summ = bush[a] + bush[a - 1] + bush[a - 2]
# print(summ)

# Задача 1 необязательная.
# Напишите программу, которая получает целое число и возвращает его двоичное, восьмеричное строковое представление.
# Функции bin и oct используйте для проверки своего результата.
# *Дополнительно
# Попробуйте избежать дублирования кода в преобразованиях к разным системам счисления
# Избегайте магических чисел
# Добавьте аннотацию типов где это возможно
# Используйте функции
